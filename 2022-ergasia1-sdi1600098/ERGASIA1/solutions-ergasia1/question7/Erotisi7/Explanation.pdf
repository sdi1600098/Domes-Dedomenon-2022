Run : ./test N
when "give pairs: " is encountered, enter pairs. For example like this : 0,1/2,3/3,1/3,0            (encountered some problems when space characters are inputed, so avoid them)
If the program terminates and there are remaining tasks that haven't been printed,
it means that those remaining tasks are impossible to complete. Such an example is the following: 
N = 6
Pairs: 1,5 / 5,4 / 5,2 / 2,1 / 0,1
After executing tasks 0 and 3 respectively, the remaining tasks remain 'locked' because one needs the other to be executed first and vise versa.

~PROCESS EXPLANATION~

1)Allocate memory for a 2 dimensional array called Tasks[i][j] where j = N (number of tasks) and i = N+1.
    The (N+1)th line is to store the in-degree of each task
    The rest of the array is to mark the tasks that can only be completed after given task.

2)Scanf to store the pairings in character array.

3)Every pair consists of a Prerequisite task and a Second task. So For each pair, mark the Tasks[Second Task][Prerequisite Task] and add to the in_degree value of the second task.

4)Print task with in-degree = 0, then subtract 1 from each task that could only be completed after the printed task.
    Mark printed task as 'already printed' by setting its in_degree to N+1 (which would not have been possible otherwise).

5)Check if the tasks are finished or if the remaining tasks can't be completed.